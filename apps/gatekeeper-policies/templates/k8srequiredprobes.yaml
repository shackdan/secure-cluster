apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequiredprobes
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "0"
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredProbes
      validation:
        openAPIV3Schema:
          type: object
          properties:
            exemptNamespaces:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequiredprobes

        missing_probe(container, probe) = true {
          not container[probe]
        }

        missing_probe(container, probe) = true {
          probe_fields := {field | container[probe][field]}
          count(probe_fields) == 0
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "Pod"
          exempt := input.parameters.exemptNamespaces
          ns := input.review.object.metadata.namespace
          not ns == exempt[_]

          container := input.review.object.spec.containers[_]
          probe := ["readinessProbe", "livenessProbe"][_]
          missing_probe(container, probe)

          msg := sprintf("Container <%v> in Pod <%v> is missing required <%v>", [container.name, input.review.object.metadata.name, probe])
        }
