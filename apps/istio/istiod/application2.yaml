apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: istiod
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  source:
    repoURL: https://istio-release.storage.googleapis.com/charts
    chart: istiod
    targetRevision: "1.26.2"
    helm:
      values: |
        # Global CNI configuration - CRITICAL for disabling init containers
        global:
          istio_cni:
            enabled: true
            chained: true
          # Configure CA properly for local/self-signed CA
          meshID: mesh1
          network: network1
          # Explicitly disable external CA
          caAddress: ""
          # Configure to use local CA
          remotePilotAddress: ""
        
        # Mesh configuration to use CNI
        meshConfig:
          defaultConfig:
            proxyMetadata:
              ISTIO_META_CNI_ENABLED: "true"
        
        pilot:
          env:
            EXTERNAL_ISTIOD: false
            # Explicitly set CA mode to local
            PILOT_ENABLE_WORKLOAD_TRUST_BUNDLES: true
            VALIDATION_WEBHOOK_CONFIG_NAME: "istio-validator-istio-system"
            # CNI-related environment variables
            ISTIO_CNI_ENABLED: "true"
        
        # Configure istiod to use local CA
        istiodRemote:
          enabled: false
        
        # Explicitly configure local CA settings
        ca:
          # Use self-signed root CA
          address: ""
          # Configure CA signing settings
          env:
            # Ensure local CA is used
            EXTERNAL_CA: false
        
        # Sidecar injector configuration to disable init containers
        sidecarInjectorWebhook:
          enableNamespacesByDefault: false
          objectSelector:
            enabled: true
          namespaceSelector:
            matchExpressions:
              - key: istio-injection
                operator: In
                values:
                  - enabled
          templates:
            sidecar: |
              spec:
                containers:
                  - name: istio-proxy
                    image: docker.io/istio/proxyv2:1.26.2
                    args:
                      - proxy
                      - sidecar
                      - --domain
                      - $(POD_NAMESPACE).svc.cluster.local
                    env:
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                    resources:
                      requests:
                        cpu: 10m
                        memory: 40Mi
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                    volumeMounts:
                      - name: istio-envoy
                        mountPath: /etc/istio/proxy
                volumes:
                  - name: istio-envoy
                    emptyDir: {}
                initContainers: []  # Explicitly no init containers â€“ CNI handles setup
        
        # Configure autoscaling to reduce HPA drift
        autoscaleEnabled: true
        autoscaleMin: 1
        autoscaleMax: 5
        
        # Configure resources to reduce deployment drift
        resources:
          requests:
            cpu: 500m
            memory: 2048Mi
          limits:
            cpu: 500m
            memory: 2048Mi
      patches:
        - target:
            kind: MutatingWebhookConfiguration
            name: istio-sidecar-injector
          patch: |-
            - op: add
              path: /webhooks/0/namespaceSelector
              value:
                matchExpressions:
                  - key: istio-injection
                    operator: In
                    values:
                      - enabled

  destination:
    server: https://kubernetes.default.svc
    namespace: istio-system
  syncPolicy:
    automated:
      prune: true
      selfHeal: false  # Critical: Don't override dynamic updates
    syncOptions:
    - CreateNamespace=false  # istio-system should exist from istio-base
    - ServerSideApply=true
    - RespectIgnoreDifferences=true
    - ApplyOutOfSyncOnly=true
    retry:
      limit: 3
      backoff:
        duration: 5s
        maxDuration: 3m
  ignoreDifferences:
    # Deployment - ignore runtime updates
    - group: apps
      kind: Deployment
      name: istiod
      namespace: istio-system
      jsonPointers:
        - /spec/replicas  # Managed by HPA
        - /spec/template/spec/containers/0/resources
        - /spec/template/spec/containers/0/env
        - /spec/template/metadata/annotations
        - /status
    - group: apps
      kind: Deployment
      name: istiod
      namespace: istio-system
      jqPathExpressions:
        - '.spec.template.metadata.annotations."kubectl.kubernetes.io/restartedAt"'
        - '.spec.template.metadata.annotations."checksum/config"'
        - '.spec.template.spec.containers[0].env[] | select(.name | test("PILOT_|ISTIOD_|EXTERNAL_|ISTIO_CNI"))'  # Added CNI env vars
    
    # HorizontalPodAutoscaler - ignore dynamic scaling decisions
    - group: autoscaling
      kind: HorizontalPodAutoscaler
      name: istiod
      namespace: istio-system
      jsonPointers:
        - /spec/targetRef
        - /spec/metrics
        - /status
    - group: autoscaling
      kind: HorizontalPodAutoscaler
      name: istiod
      namespace: istio-system
      jqPathExpressions:
        - '.status.currentReplicas'
        - '.status.desiredReplicas'
        - '.status.currentMetrics'
        - '.spec.behavior'
    
    # PodDisruptionBudget - ignore dynamic availability calculations
    - group: policy
      kind: PodDisruptionBudget
      name: istiod
      namespace: istio-system
      jsonPointers:
        - /status
        - /spec/selector
    - group: policy
      kind: PodDisruptionBudget
      name: istiod
      namespace: istio-system
      jqPathExpressions:
        - '.status.currentHealthy'
        - '.status.desiredHealthy'
        - '.status.disruptionsAllowed'
    
    # Role - ignore permission updates
    - group: rbac.authorization.k8s.io
      kind: Role
      name: istiod
      namespace: istio-system
      jsonPointers:
        - /rules
        - /metadata/labels
        - /metadata/annotations
    - group: rbac.authorization.k8s.io
      kind: Role
      name: istiod
      namespace: istio-system
      jqPathExpressions:
        - '.rules[] | select(.verbs[] | test("watch|list|get"))'
    
    # RoleBinding - ignore subject updates
    - group: rbac.authorization.k8s.io
      kind: RoleBinding
      name: istiod
      namespace: istio-system
      jsonPointers:
        - /subjects
        - /roleRef
        - /metadata/labels
        - /metadata/annotations
    - group: rbac.authorization.k8s.io
      kind: RoleBinding
      name: istiod
      namespace: istio-system
      jqPathExpressions:
        - '.subjects[] | select(.kind == "ServiceAccount")'
    
    # ValidatingWebhookConfiguration - ignore dynamic webhook management
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      name: istio-validator-istio-system
      jsonPointers:
        - /webhooks
        - /metadata/labels
        - /metadata/ownerReferences
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      name: istio-validator-istio-system
      jqPathExpressions:
        - '.webhooks[]?.clientConfig.caBundle'
        - '.webhooks[]?.failurePolicy'
        - '.webhooks[]?.namespaceSelector'
        - '.webhooks[]?.rules'
        - '.webhooks[]?.admissionReviewVersions'
    
    # MutatingWebhookConfiguration - ignore sidecar injection webhook updates
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      name: istio-sidecar-injector
      namespace: istio-system
      jsonPointers:
        - /webhooks
        - /metadata/labels
        - /metadata/ownerReferences
    - group: admissionregistration.k8s.io
      kind: MutatingWebhookConfiguration
      name: istio-sidecar-injector
      namespace: istio-system
      jqPathExpressions:
        - '.webhooks[]?.clientConfig.caBundle'
        - '.webhooks[]?.failurePolicy'
        - '.webhooks[]?.namespaceSelector'
        - '.webhooks[]?.rules'